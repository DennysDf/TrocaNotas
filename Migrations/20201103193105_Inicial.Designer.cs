// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecSaudeAH.Models.BDSECSAUDE.Context;

namespace SecSaudeAH.Migrations
{
    [DbContext(typeof(DBSaudeAHContext))]
    [Migration("20201103193105_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Hospital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Endereco");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Nome");

                    b.Property<int>("ProfissionalId");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("Hospitais");
                });

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<bool>("IsProprio");

                    b.Property<string>("Nome");

                    b.Property<int>("ProfissionalId");

                    b.Property<string>("Sexo");

                    b.HasKey("Id");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNS");

                    b.Property<string>("CPF");

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DataNasc");

                    b.Property<string>("Endereco");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Nome");

                    b.Property<string>("NomeMae");

                    b.Property<int>("ProfissionalId");

                    b.HasKey("Id");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Procedimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Nome");

                    b.Property<int>("ProfissionalId");

                    b.Property<string>("ValorMed");

                    b.HasKey("Id");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("Procedimentos");
                });

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Profissional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email");

                    b.Property<string>("Extensao");

                    b.Property<string>("Funcao");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastLogin");

                    b.Property<string>("Login");

                    b.Property<string>("Nome");

                    b.Property<int>("SecretariaId");

                    b.Property<string>("Senha");

                    b.Property<string>("Telefone");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("SecretariaId");

                    b.ToTable("Profissionais");
                });

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Secretaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email");

                    b.Property<string>("Endereco");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Nome");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.ToTable("Secretaria");
                });

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Unidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Endereco");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Nome");

                    b.Property<int>("ProfissionalId");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("ProfissionalId");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Hospital", b =>
                {
                    b.HasOne("SecSaudeAH.Models.BDSECSAUDE.Entidades.Profissional", "Profissional")
                        .WithMany("Hospitais")
                        .HasForeignKey("ProfissionalId");
                });

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Medico", b =>
                {
                    b.HasOne("SecSaudeAH.Models.BDSECSAUDE.Entidades.Profissional", "Profissional")
                        .WithMany("Medicos")
                        .HasForeignKey("ProfissionalId");
                });

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Paciente", b =>
                {
                    b.HasOne("SecSaudeAH.Models.BDSECSAUDE.Entidades.Profissional", "Profissional")
                        .WithMany("Pacientes")
                        .HasForeignKey("ProfissionalId");
                });

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Procedimento", b =>
                {
                    b.HasOne("SecSaudeAH.Models.BDSECSAUDE.Entidades.Profissional", "Profissional")
                        .WithMany("Procedimentos")
                        .HasForeignKey("ProfissionalId");
                });

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Profissional", b =>
                {
                    b.HasOne("SecSaudeAH.Models.BDSECSAUDE.Entidades.Secretaria", "Secretaria")
                        .WithMany("Profissionais")
                        .HasForeignKey("SecretariaId");
                });

            modelBuilder.Entity("SecSaudeAH.Models.BDSECSAUDE.Entidades.Unidade", b =>
                {
                    b.HasOne("SecSaudeAH.Models.BDSECSAUDE.Entidades.Profissional", "Profissional")
                        .WithMany("Unidades")
                        .HasForeignKey("ProfissionalId");
                });
#pragma warning restore 612, 618
        }
    }
}
